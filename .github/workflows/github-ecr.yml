# This is a basic workflow to help you get started with Actions

name: CI to AWS ECR

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: AWS ECR
        # You may pin to the exact commit or the version.
        # uses: kciter/aws-ecr-action@287991878740e91226f2177fdb85deb174fe0df3
        uses: kciter/aws-ecr-action@v3
        with:
          # The AWS access key id
          access_key_id: AKIAUUTSLL7EWTKC4ZVM
          # The AWS secret access key
          secret_access_key: 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
          # AWS Account ID
          account_id: mkd63
          # A role to assume under the account_id account.
          # assume_role: # optional, default is 
          # Name of your ECR repository
          repo: leo-electricals 
          # The AWS region
          region: ap-south-1
          # Set this to true to set a policy on the repository
          # set_repo_policy: # optional
          # Set this to repository policy statement json file. only used if the set_repo_policy is set to true
          # repo_policy_file: # optional, default is repo-policy.json
          # Comma-separated string of ECR image tags
          tags: github-deploy
          # Name of Dockerfile to use
          # dockerfile: # optional, default is Dockerfile
          # Extra flags to pass to docker build (see docs.docker.com/engine/reference/commandline/build)
          # extra_build_args: # optional, default is 
          # Path to Dockerfile, defaults to the working directory
          # path: # optional, default is .
          # Relative path from top-level to script to run before Docker build
          # prebuild_script: # optional

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
